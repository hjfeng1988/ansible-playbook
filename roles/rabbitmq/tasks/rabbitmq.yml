- name: copy rabbitmq to /usr/local/src
  copy:
    src: rabbitmq-server-generic-unix-3.6.14.tar.xz
    dest: /usr/local/src/rabbitmq-server-generic-unix-3.6.14.tar.xz

- name: unarchive rabbitmq to /usr/local/rabbitmq
  shell:
    cmd: |
      cd /usr/local/src
      tar xf rabbitmq-server-generic-unix-3.6.14.tar.xz
      mv rabbitmq_server-3.6.14 /usr/local/rabbitmq
  args:
    creates: /usr/local/rabbitmq

- name: copy .erlang.cookie
  copy:
    src: erlang.cookie
    dest: /root/.erlang.cookie
    mode: 0400

- name: check if /usr/local/rabbitmq/var exists
  stat:
    path: /usr/local/rabbitmq/var
  register: rabbitmq_rc1

- name: start rabbitmq main
  shell:
    cmd: |
      rabbitmq-server -detached
      sleep 3
      rabbitmq-plugins enable rabbitmq_management
      rabbitmqctl add_user {{ rabbitmq_user }} {{ rabbitmq_pass }}
      rabbitmqctl set_user_tags {{ rabbitmq_user }} administrator
      rabbitmqctl set_permissions -p "/" {{ rabbitmq_user }} ".*" ".*" ".*"
  when:
    - inventory_hostname in groups['rabbitmq_main']
    - not rabbitmq_rc1.stat.exists


- name: start rabbitmq joiner
  shell:
    cmd: |
      rabbitmq-server -detached
      sleep 3
      rabbitmq-plugins enable rabbitmq_management
      rabbitmqctl stop_app
      rabbitmqctl reset
      rabbitmqctl join_cluster rabbit@{{ hostvars[groups['rabbitmq_main'][0]].hostname }}
      rabbitmqctl start_app
  when:
    - inventory_hostname in groups['rabbitmq_joiner']
    - not rabbitmq_rc1.stat.exists
